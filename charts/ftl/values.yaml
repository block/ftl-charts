fullnameOverride: "ftl"
nameOverride: ""
realmName: "ftl"

logLevel: debug
logJson: true

image:
  tag: null
  pullPolicy: IfNotPresent
  base: "ftl0"

secrets:
  logEncryptionKey: null
  asyncEncryptionKey: null
  controllerRegistryUsername: null
  controllerRegistryPassword: null
  runnerRegistryUsername: null
  runnerRegistryPassword: null

provisioner:
  provisionersRoleArn: arn:aws:iam::ftl-provisioners-irsa-role
  replicas: 1
  revisionHistoryLimit: 0
  userNamespace:
  modulePerNamespace: false
  defaultRunnerImage: ftl0/ftl-runner
  configMap: "ftl-provisioner-default-config"
  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-provisioner"
  config:
    plugins:
      - id: "cloudformation"
        resources:
          - "postgres"
          - "topic"
          - "subscription"
      - id: "sandbox"
        resources:
          - "mysql"
  envFrom: null
  env: null
  serviceAccountName: ftl-provisioner

  readinessProbe: null

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null
  resources:
    requests:
      memory: 256Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 2
runner:
  revisionHistoryLimit: 0

  envFrom: null
  image:
    pullPolicy: null

  resources:
    requests:
      memory: 256Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 2
  env: null

  port: 8892

  readinessProbe: null

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null


cron:
  replicas: 3
  storage: 50Mi
  revisionHistoryLimit: 0
  
  services:
    cron:
      type: ClusterIP
      annotations: null
      containerPort: 8892
      port: 8892
    raft:
      annotations: null
      containerPort: 8893
      port: 8893

  env: null
  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-cron"

  envFrom: null
  serviceAccountName: ftl-cron
  podAnnotations: null

  raft:
    annotations: null
    containerPort: 8893
    port: 8893

  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 2

istio:
  enabled: false # set to true to have this chart install the grpc config to enable trailers
  holdApplicationUntilProxyStarts: true

registry:
  repository: ""
  allowInsecure: false
  create: false
  service:
    annotations: null

ingress:
  allowOrigin: "*"
  env: null

  ports:
    - name: http2
      containerPort: 8891
      protocol: TCP
      port: 8891

  replicas: 1
  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-http-ingress"

  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-http-ingress

  readinessProbe: null

  service:
    type: ClusterIP
    annotations: null
    ports:
      - name: "http-8892"
        port: 80
        protocol: TCP
        targetPort: 8892

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

timeline:
  enabled: true
  env: null

  port: 8892

  replicas: 1
  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-timeline"

  resources:
    requests:
      memory: 256Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 2
  envFrom: null
  serviceAccountName: ftl-timeline
  readinessProbe: null

  service:
    annotations: null

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

schema:
  enabled: true
  replicas: 3
  storage: 50Mi
  env: null

  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-schema"

  resources:
    requests:
      memory: 256Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-schema
  serviceName: ftl-schema-raft

  readinessProbe: null

  services:
    schema:
      type: ClusterIP
      annotations: null
      port: 8892
    raft:
      annotations: null
      port: 8893
  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

schemaMirror:
  enabled: true
  replicas: 1
  env: null

  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-schema-mirror"

  resources:
    requests:
      memory: 256Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-schema-mirror

  readinessProbe: null

  service:
    annotations: null
    port: 8892
  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

console:
  enabled: true
  env: null
  port: 8892

  replicas: 1
  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-console"

  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-console

  readinessProbe: null

  service:
    type: ClusterIP
    annotations: null
    ports:
      - name: "http-8892"
        port: 8892
        protocol: TCP
        targetPort: 8892

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

lease:
  env: null
  port: 8892
  logLevel: debug
  logJson: true

  replicas: 1
  revisionHistoryLimit: 0

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-lease"

  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-lease

  readinessProbe: null

  service:
    annotations: null

  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null

admin:
  logLevel: debug
  logJson: true
  port: 8892

  replicas: 1
  revisionHistoryLimit: 0

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Mi
    # storageClass: "" # Optional: leave empty to use default storage class

  image:
    repository: null
    tag: null
    pullPolicy: null
    name: "ftl-admin"

  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 2

  envFrom: null
  serviceAccountName: ftl-admin

  readinessProbe: null

  service:
    annotations: null
    port: 8892

  env: null
  podAnnotations: null
  nodeSelector: null
  affinity: null
  topologySpreadConstraints: null
  tolerations: null
