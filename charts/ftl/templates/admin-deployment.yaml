{{ $version := printf "v%s" .Chart.Version -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ftl.fullname" . }}-admin
  labels:
    {{- include "ftl.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.admin.replicas }}
  revisionHistoryLimit: {{ .Values.admin.revisionHistoryLimit }}
  {{- if .Values.admin.persistence.enabled }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      {{- include "ftl-admin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ftl-admin.selectorLabels" . | nindent 8 }}
      annotations:
      {{- if .Values.admin.podAnnotations }}
        {{- toYaml .Values.admin.podAnnotations | nindent 8 }}
      {{- end }}
      {{ if .Values.istio.holdApplicationUntilProxyStarts }}
        proxy.istio.io/config: |
          holdApplicationUntilProxyStarts: true
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.admin.serviceAccountName }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: app
          image: "{{ .Values.admin.image.repository | default (printf "%s/%s" .Values.image.base .Values.admin.image.name) }}:{{ .Values.admin.image.tag | default .Values.image.tag | default $version }}"
          imagePullPolicy: {{ .Values.admin.image.pullPolicy | default .Values.image.pullPolicy  }}
          {{- if .Values.admin.envFrom }}
          envFrom:
            {{- if .Values.admin.envFrom }}
            {{- toYaml .Values.admin.envFrom | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
            - name: FTL_CONFIG
              value: /data/config.json
            - name: FTL_SECRETS
              value: /secrets.json
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: FTL_BIND
              value: "http://0.0.0.0:8892"
            - name: FTL_SCHEMA_ENDPOINT
              value: "http://{{ include "ftl.fullname" . }}-schema:{{ .Values.schema.services.schema.port }}"
            - name: FTL_TIMELINE_ENDPOINT
              value: "http://{{ include "ftl.fullname" . }}-timeline:{{ .Values.timeline.port }}"
            - name: LOG_LEVEL
              value: "{{ .Values.admin.logLevel | default .Values.logLevel }}"
            - name: LOG_JSON
              value: "{{ .Values.admin.logJson | default .Values.logJson }}"
            - name: FTL_ARTEFACT_REGISTRY
              value: "{{ .Values.registry.repository }}"
            - name: FTL_ARTEFACT_REGISTRY_ALLOW_INSECURE
              value: "{{ .Values.registry.allowInsecure }}"
            - name: FTL_ARTEFACT_REGISTRY_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "ftl.fullname" . }}-secrets
                  key: FTL_CONTROLLER_REGISTRY_USERNAME
                  optional: true
            - name: FTL_ARTEFACT_REGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ftl.fullname" . }}-secrets
                  key: FTL_CONTROLLER_REGISTRY_PASSWORD
                  optional: true
            {{- if .Values.admin.env }}
            {{- toYaml .Values.admin.env | nindent 12 }}
            {{- end }}

          ports:
            - name: http2
              containerPort: 8892
              protocol: TCP
              hostPort: {{ .Values.admin.port }}
          {{- include "ftl.resources" .Values.admin | nindent 10 }}
          {{- include "ftl.healthProbes" .Values.admin | nindent 10 }}
          {{- include "ftl.securityContext" .Values.timeline | nindent 10 }}
          {{- if .Values.admin.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
      {{- include "ftl.commonPodConfig" .Values.admin | nindent 6 }}
      {{- if .Values.admin.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ftl.fullname" . }}-admin
      {{- end }}

